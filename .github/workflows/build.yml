name: Build

on:
  push:
    branches:
      - main
    paths:
      - src/**
  pull_request:
    branches:
      - main
    paths:
      - .github/**
      - src/**
      - tests/**
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ./src/Shark.Fido2.sln
    - name: Build
      run: dotnet build ./src/Shark.Fido2.sln --configuration Release --no-restore
    - name: Test
      run: dotnet test ./src/Shark.Fido2.sln --collect:"XPlat Code Coverage;Format=json,lcov,cobertura" --results-directory "TestResults" --configuration Release --no-build --verbosity normal

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Add .NET global tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Generate Code Coverage Report (HTML & Cobertura XML)
      run: dotnet reportgenerator "-reports:TestResults/**/coverage.cobertura.xml" "-targetdir:coverage-report" -reporttypes:Html;Cobertura

    - name: Upload Test Results as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: TestResults/

    - name: Upload Code Coverage Report (HTML) as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-html-report
        path: coverage-report/

    - name: Get Code Coverage Percentage for Badge/PR Comment
      id: get-coverage-percentage
      run: |
        COVERAGE_PERCENTAGE=$(xmllint --xpath "string(//coverage/@line-rate * 100)" coverage-report/Cobertura.xml)
        echo "COVERAGE_PERCENTAGE=$COVERAGE_PERCENTAGE" >> $GITHUB_OUTPUT
